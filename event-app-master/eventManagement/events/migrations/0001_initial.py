# Generated by Django 2.0.5 on 2018-06-26 08:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ErpSku',
            fields=[
                ('sku', models.CharField(db_column='SKU', max_length=30, primary_key=True, serialize=False)),
                ('sku_name', models.CharField(blank=True, db_column='SKU_NAME', max_length=200, null=True)),
                ('brand', models.CharField(blank=True, db_column='BRAND', max_length=50, null=True)),
                ('category1', models.CharField(blank=True, db_column='CATEGORY1', max_length=100, null=True)),
                ('category2', models.CharField(blank=True, db_column='CATEGORY2', max_length=100, null=True)),
                ('category3', models.CharField(blank=True, db_column='CATEGORY3', max_length=40, null=True)),
                ('category4', models.CharField(blank=True, db_column='CATEGORY4', max_length=40, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'ERP_SKU',
            },
        ),
        migrations.CreateModel(
            name='MagentoCelebProd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('celebrity_id', models.IntegerField()),
                ('label', models.IntegerField()),
                ('celebrity_name', models.CharField(blank=True, max_length=100, null=True)),
                ('product_entity_id', models.IntegerField()),
                ('sku', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'magento_celeb_prod',
            },
        ),
        migrations.CreateModel(
            name='EventClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('event_class', models.CharField(db_column='event_class', max_length=20)),
            ],
            options={
                'db_table': 'event_class',
                'verbose_name_plural': 'Content Type',
            },
        ),
        migrations.CreateModel(
            name='EventsHeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=55, null=True)),
                ('celebrity_name', models.CharField(max_length=55, null=True)),
                ('celebrity_id', models.PositiveIntegerField(db_column='celebrity_id', null=True)),
                ('generic', models.CharField(max_length=55, null=True)),
                ('event_portal', models.CharField(max_length=50, null=True)),
                ('event_type', models.CharField(max_length=50, null=True)),
                ('event_class', models.CharField(max_length=50, null=True)),
                ('bq_post', models.PositiveIntegerField(db_column='bq_post')),
                ('total_post', models.PositiveIntegerField(db_column='total_post')),
                ('event_date', models.DateField(blank=True, null=True)),
                ('event_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('event_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('event_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('remark', models.TextField(db_column='remark', max_length=255)),
            ],
            options={
                'managed': True,
                'db_table': 'events_header',
                'verbose_name_plural': 'events',
            },
        ),
        migrations.CreateModel(
            name='EventsLabelDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(blank=True, max_length=55, null=True)),
                ('labelid', models.CharField(max_length=50, null=True)),
                ('skuid', models.CharField(max_length=50, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.EventsHeader')),
            ],
            options={
                'managed': True,
                'db_table': 'events_label_details',
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('event_type', models.CharField(db_column='event_type', max_length=20)),
            ],
            options={
                'db_table': 'event_type',
                'verbose_name_plural': 'Type Of Snap',
            },
        ),
        migrations.CreateModel(
            name='Portal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('portal_name', models.CharField(db_column='portal_name', max_length=20)),
            ],
            options={
                'db_table': 'portal',
                'verbose_name_plural': 'Channel',
            },
        ),
    ]
