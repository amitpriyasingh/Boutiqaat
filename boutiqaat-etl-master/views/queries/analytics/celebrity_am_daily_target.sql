CREATE OR REPLACE VIEW analytics.celebrity_am_daily_target AS
SELECT celeb_am_target.target_date, celeb_am_target.celebrity_id, celeb_am_target.celebrity_name, celeb_am_target.am_name, celeb_am_target.am_email, celeb_am_target.target_kwd, celeb_am_target.last_updated_utc FROM (SELECT target.target_date, target.celebrity_id, target.celebrity_name, target.target_kwd, CASE WHEN ((target.target_date >= ranked_bcm.am_start_date) AND (target.target_date <= ranked_bcm.am_end_date)) THEN ranked_bcm.am_name ELSE NULL::character varying END AS am_name, CASE WHEN ((target.target_date >= ranked_bcm.am_start_date) AND (target.target_date <= ranked_bcm.am_end_date)) THEN ranked_bcm.am_email ELSE NULL::character varying END AS am_email, ranked_bcm.last_updated_utc FROM (aoi.celebrity_daily_target target LEFT JOIN (SELECT ordered_bcm.celebrity_id, ordered_bcm.current_am AS am_name, ordered_bcm.am_email, "max"(ordered_bcm.am_effective_date) AS am_start_date, "max"(COALESCE(ordered_bcm.am_mapping_end_date, '2100-01-01 00:00:00'::timestamp without time zone)) AS am_end_date, "max"(ordered_bcm.last_updated_utc) AS last_updated_utc FROM (SELECT bi_celebrity_master.celebrity_id, bi_celebrity_master.celebrity_name, bi_celebrity_master.current_am, bi_celebrity_master.am_email, bi_celebrity_master.am_effective_date, bi_celebrity_master.am_mapping_end_date, bi_celebrity_master.last_updated_utc FROM aoi.bi_celebrity_master) ordered_bcm GROUP BY ordered_bcm.celebrity_id, ordered_bcm.current_am, ordered_bcm.am_email) ranked_bcm ON ((target.celebrity_id = ranked_bcm.celebrity_id)))) celeb_am_target WHERE (((celeb_am_target.celebrity_id = 0) AND (celeb_am_target.am_email IS NULL)) OR (celeb_am_target.am_email IS NOT NULL)) GROUP BY celeb_am_target.target_date, celeb_am_target.celebrity_id, celeb_am_target.celebrity_name, celeb_am_target.am_name, celeb_am_target.am_email, celeb_am_target.target_kwd, celeb_am_target.last_updated_utc
WITH NO SCHEMA BINDING;