CREATE OR REPLACE VIEW sandbox.mohit_stock_sku_sale AS
SELECT csku.crs_available AS available_qty, csku.crs_reserved AS reserved_qty, sale.order_date, sale.sku_id, sale.sku_count, sale.gmv, sale.net_revenue, sale.total_qty, sale.net_sold_qty, sale.cancel_revenue, sale.cancel_units, sale.celebrity_qty, sale.celebrity_revenue, sale.return_qty FROM ((SELECT sales.order_date, sales.sku_id, count(sales.sku_id) AS sku_count, sum(sales.gmv) AS gmv, sum(sales.units) AS total_qty, sum(sales.shipments) AS shipments, sum(sales.shipping_revenue) AS shipping_revenue, sum(sales.cancel_revenue) AS cancel_revenue, sum(sales.cancel_units) AS cancel_units, sum(sales.gift_net_units) AS celebrity_qty, sum(sales.net_units) AS net_sold_qty, sum(sales.return_units) AS return_qty, sum(CASE WHEN (sales.gift_net_units > 0) THEN sales.gmv ELSE (0)::numeric END) AS celebrity_revenue, sum(sales.net_revenue) AS net_revenue FROM sandbox.sales GROUP BY sales.order_date, sales.sku_id) sale LEFT JOIN (SELECT ds.sku_id, css.crs_available, css.crs_reserved FROM (aoi.consolidated_sku_stock css LEFT JOIN sandbox.dim_sku ds ON (((css.sku)::text = (ds.sku)::text)))) csku ON ((csku.sku_id = sale.sku_id)))
WITH NO SCHEMA BINDING;