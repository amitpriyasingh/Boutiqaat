CREATE OR REPLACE VIEW sandbox.dboost_global_score_vw AS
SELECT b.sku, b.celebrity_id, b.product_status, b.enable_date, b.first_sell_date, b.first_grn_date, b.brand, b.category1, b.category2, b.category3, b.category4, b.impression_7days, b.impression_14days, b.impression_28days, b.impression_90days, b.qty_7days, b.qty_14days, b.qty_28days, b.qty_90days, b.rev_7days, b.rev_14days, b.rev_28days, b.rev_90days, b.soh, b.open_po_qty, b.stock_cover, b.open_po_flag, b.last28dayrpmi, b.last7dayrpmi, b.is_new_arrival, b.index_fact, b.lavg_cc12b, b.lavg_cc1b, b.lavg_cc1, b.lavg_c, b.lavg_c12b, b.lavg_c1b, b.lavg_c1, b.avg_considered, b.score_a, b.score_b, b.score_c, b.score_d, b.score_f, b.global_score, b.score_rank, b.avg_impression, b.g_score, pg_catalog.row_number() OVER(  PARTITION BY b.celebrity_id ORDER BY b.g_score DESC) AS gscore_rank FROM (SELECT g.sku, g.celebrity_id, g.product_status, g.enable_date, g.first_sell_date, g.first_grn_date, g.brand, g.category1, g.category2, g.category3, g.category4, g.impression_7days, g.impression_14days, g.impression_28days, g.impression_90days, g.qty_7days, g.qty_14days, g.qty_28days, g.qty_90days, g.rev_7days, g.rev_14days, g.rev_28days, g.rev_90days, g.soh, g.open_po_qty, g.stock_cover, g.open_po_flag, g.last28dayrpmi, g.last7dayrpmi, g.is_new_arrival, g.index_fact, g.lavg_cc12b, g.lavg_cc1b, g.lavg_cc1, g.lavg_c, g.lavg_c12b, g.lavg_c1b, g.lavg_c1, g.avg_considered, g.score_a, g.score_b, g.score_c, g.score_d, g.score_f, g.global_score, g.score_rank, a.avg_impression, CASE WHEN (((g.score_rank)::numeric < a.p1rank) AND ((g.impression_28days)::numeric < (a.avg_impression * 0.1))) THEN (g.global_score * (0.8)::double precision) ELSE g.global_score END AS g_score FROM sandbox.gsorting_score g, (SELECT ((1.00000000 * (sum(gsorting_score.impression_28days))::numeric) / (count(gsorting_score.sku))::numeric) AS avg_impression, (0.01 * ("max"(gsorting_score.score_rank))::numeric) AS p1rank FROM sandbox.gsorting_score) a) b
WITH NO SCHEMA BINDING;